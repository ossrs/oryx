name: Test for commits

on:
  push:
    branches: [main]

jobs:
  envs:
    name: envs
    steps:
      ##################################################################################################################
      # Git checkout
      - name: Checkout repository
        uses: actions/checkout@v3
      # The github.ref is, for example, refs/tags/v5.0.145 or refs/tags/v5.0-r8
      # Generate variables like:
      #   SRS_TAG=v1.0.52
      #   SRS_MAJOR=1
      # @see https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Generate varaiables
        run: |
          SRS_TAG=$(bash scripts/setup-ubuntu/version.sh)
          echo "SRS_TAG=$SRS_TAG" >> $GITHUB_ENV
          SRS_MAJOR=$(echo $SRS_TAG| awk -F '.' '{print $1}' |sed 's/v//g')
          echo "SRS_MAJOR=$SRS_MAJOR" >> $GITHUB_ENV
          echo "SRS_PLATFORM_SECRET=`date +%s`" >> $GITHUB_ENV
    # Map a step output to a job output, see https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
    outputs:
      SRS_TAG: ${{ env.SRS_TAG }}
      SRS_MAJOR: ${{ env.SRS_MAJOR }}
      SRS_PLATFORM_SECRET: ${{ env.SRS_PLATFORM_SECRET }}
    runs-on: ubuntu-20.04

  test:
    name: Test for commits
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup the npm node
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            ui/package-lock.json
      - name: Setup the Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.16.0'
      - name: Test by jest and Go
        run: |
          make -j && make test -j

  install-script:
    name: Test for install by script
    runs-on: ubuntu-20.04
    needs:
      - envs
    steps:
      - name: Covert output to env
        run: |
          echo "SRS_TAG=${{ needs.envs.outputs.SRS_TAG }}" >> $GITHUB_ENV
          echo "SRS_MAJOR=${{ needs.envs.outputs.SRS_MAJOR }}" >> $GITHUB_ENV
          echo "SRS_PLATFORM_SECRET=${{ needs.envs.outputs.SRS_PLATFORM_SECRET }}" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build image for platform
        run: |
          docker build -t platform:latest -f Dockerfile . &&
          docker tag platform:latest ossrs/srs-cloud:$SRS_TAG &&
          docker tag platform:latest registry.cn-hangzhou.aliyuncs.com/ossrs/srs-cloud:$SRS_TAG &&
          docker images
      - name: Build package
        run: |
          bash scripts/setup-ubuntu/build.sh --language zh --version $SRS_TAG \
            --output build --extract
          du -sh build/*
      - name: Install package
        run: |
          sudo bash build/srs-cloud/scripts/setup-ubuntu/install.sh --verbose &&
          du -sh /usr/local/srs-cloud/*
      - name: Check service
        run: |
          systemctl status srs-cloud
      - name: Test service
        run: |
          cd test && go test -mod=vendor -v -init-password .

  final:
    name: Final
    runs-on: ubuntu-20.04
    needs:
      - test
      - install-script
    steps:
      - run: echo OK
