# !!! Important: SRS will restore this file during each restart, please never modify it.

# The config for LigthHouse SRS.
# See https://github.com/ossrs/srs/blob/develop/trunk/conf/full.conf

listen              1935;
max_connections     1000;
# For docker, please use docker logs to manage the logs of SRS.
# See https://docs.docker.com/config/containers/logging/
srs_log_tank        console;
pid                 ./objs/origin.pid;
daemon              on;
disable_daemon_for_docker off;
http_api {
    enabled         on;
    listen          127.0.0.1:1985;
    raw_api {
        enabled on;
        allow_reload on;
    }
}
http_server {
    enabled         on;
    listen          8080;
    dir             ./objs/nginx/html;
}
rtc_server {
    enabled on;
    listen 8000; # UDP port
    # @see https://github.com/ossrs/srs/wiki/v4_CN_WebRTC#config-candidate
    candidate $CANDIDATE;
    # Disable for Oryx.
    use_auto_detect_network_ip off;
    api_as_candidates off;
}

# See https://github.com/ossrs/srs/issues/1147
srt_server {
    enabled on;
    listen 10080; # UDP port
    maxbw 1000000000;
    connect_timeout 4000;
    latency 20;
    peerlatency 20;
    recvlatency 20;
    # See https://ossrs.io/lts/en-us/docs/v6/doc/srt#high-quality-mode
    tlpktdrop off;
    tsbpdmode off;
}

heartbeat {
    enabled on;
    interval 9;
    url http://127.0.0.1:12025/api/v1/srs/register;
    device_id origin;
    ports on;
}

include containers/data/config/srs.server.conf;

vhost __defaultVhost__ {
    http_remux {
        enabled     on;
        mount       [vhost]/[app]/[stream].flv;
    }
    rtc {
        enabled     on;
        nack on;
        twcc on;
        stun_timeout 30;
        dtls_role passive;
        # @see https://github.com/ossrs/srs/wiki/v4_CN_WebRTC#rtmp-to-rtc
        rtmp_to_rtc on;
        keep_bframe off;
        # @see https://github.com/ossrs/srs/wiki/v4_CN_WebRTC#rtc-to-rtmp
        rtc_to_rtmp on;
        pli_for_rtmp 6.0;
    }
    srt {
        enabled     on;
        srt_to_rtmp on;
    }

    # For backend server to verify client.
    http_hooks {
        enabled         on;
        on_publish      http://localhost:2022/terraform/v1/hooks/srs/verify;
        on_unpublish    http://localhost:2022/terraform/v1/hooks/srs/verify;
        on_play         http://localhost:2022/terraform/v1/hooks/srs/verify;
        on_stop         http://localhost:2022/terraform/v1/hooks/srs/verify;
        on_hls          http://localhost:2022/terraform/v1/hooks/srs/hls;
    }

    include containers/data/config/srs.vhost.conf;
}
